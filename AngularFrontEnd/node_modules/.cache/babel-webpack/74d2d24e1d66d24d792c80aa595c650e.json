{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass GMap {\n  constructor(el, differs, cd, zone) {\n    this.el = el;\n    this.cd = cd;\n    this.zone = zone;\n    this.onMapClick = new EventEmitter();\n    this.onOverlayClick = new EventEmitter();\n    this.onOverlayDblClick = new EventEmitter();\n    this.onOverlayDragStart = new EventEmitter();\n    this.onOverlayDrag = new EventEmitter();\n    this.onOverlayDragEnd = new EventEmitter();\n    this.onMapReady = new EventEmitter();\n    this.onMapDragEnd = new EventEmitter();\n    this.onZoomChanged = new EventEmitter();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewChecked() {\n    if (!this.map && this.el.nativeElement.offsetParent) {\n      this.initialize();\n    }\n  }\n\n  initialize() {\n    this.map = new google.maps.Map(this.el.nativeElement.children[0], this.options);\n    this.onMapReady.emit({\n      map: this.map\n    });\n\n    if (this.overlays) {\n      for (let overlay of this.overlays) {\n        overlay.setMap(this.map);\n        this.bindOverlayEvents(overlay);\n      }\n    }\n\n    this.map.addListener('click', event => {\n      this.zone.run(() => {\n        this.onMapClick.emit(event);\n      });\n    });\n    this.map.addListener('dragend', event => {\n      this.zone.run(() => {\n        this.onMapDragEnd.emit(event);\n      });\n    });\n    this.map.addListener('zoom_changed', event => {\n      this.zone.run(() => {\n        this.onZoomChanged.emit(event);\n      });\n    });\n  }\n\n  bindOverlayEvents(overlay) {\n    overlay.addListener('click', event => {\n      this.zone.run(() => {\n        this.onOverlayClick.emit({\n          originalEvent: event,\n          'overlay': overlay,\n          map: this.map\n        });\n      });\n    });\n    overlay.addListener('dblclick', event => {\n      this.zone.run(() => {\n        this.onOverlayDblClick.emit({\n          originalEvent: event,\n          'overlay': overlay,\n          map: this.map\n        });\n      });\n    });\n\n    if (overlay.getDraggable()) {\n      this.bindDragEvents(overlay);\n    }\n  }\n\n  ngDoCheck() {\n    let changes = this.differ.diff(this.overlays);\n\n    if (changes && this.map) {\n      changes.forEachRemovedItem(record => {\n        google.maps.event.clearInstanceListeners(record.item);\n        record.item.setMap(null);\n      });\n      changes.forEachAddedItem(record => {\n        record.item.setMap(this.map);\n        record.item.addListener('click', event => {\n          this.zone.run(() => {\n            this.onOverlayClick.emit({\n              originalEvent: event,\n              overlay: record.item,\n              map: this.map\n            });\n          });\n        });\n\n        if (record.item.getDraggable()) {\n          this.bindDragEvents(record.item);\n        }\n      });\n    }\n  }\n\n  bindDragEvents(overlay) {\n    overlay.addListener('dragstart', event => {\n      this.zone.run(() => {\n        this.onOverlayDragStart.emit({\n          originalEvent: event,\n          overlay: overlay,\n          map: this.map\n        });\n      });\n    });\n    overlay.addListener('drag', event => {\n      this.zone.run(() => {\n        this.onOverlayDrag.emit({\n          originalEvent: event,\n          overlay: overlay,\n          map: this.map\n        });\n      });\n    });\n    overlay.addListener('dragend', event => {\n      this.zone.run(() => {\n        this.onOverlayDragEnd.emit({\n          originalEvent: event,\n          overlay: overlay,\n          map: this.map\n        });\n      });\n    });\n  }\n\n  getMap() {\n    return this.map;\n  }\n\n}\n\nGMap.ɵfac = function GMap_Factory(t) {\n  return new (t || GMap)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nGMap.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GMap,\n  selectors: [[\"p-gmap\"]],\n  inputs: {\n    style: \"style\",\n    styleClass: \"styleClass\",\n    options: \"options\",\n    overlays: \"overlays\"\n  },\n  outputs: {\n    onMapClick: \"onMapClick\",\n    onOverlayClick: \"onOverlayClick\",\n    onOverlayDblClick: \"onOverlayDblClick\",\n    onOverlayDragStart: \"onOverlayDragStart\",\n    onOverlayDrag: \"onOverlayDrag\",\n    onOverlayDragEnd: \"onOverlayDragEnd\",\n    onMapReady: \"onMapReady\",\n    onMapDragEnd: \"onMapDragEnd\",\n    onZoomChanged: \"onZoomChanged\"\n  },\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"ngStyle\"]],\n  template: function GMap_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style);\n    }\n  },\n  directives: [i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GMap, [{\n    type: Component,\n    args: [{\n      selector: 'p-gmap',\n      template: `<div [ngStyle]=\"style\" [class]=\"styleClass\"></div>`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    overlays: [{\n      type: Input\n    }],\n    onMapClick: [{\n      type: Output\n    }],\n    onOverlayClick: [{\n      type: Output\n    }],\n    onOverlayDblClick: [{\n      type: Output\n    }],\n    onOverlayDragStart: [{\n      type: Output\n    }],\n    onOverlayDrag: [{\n      type: Output\n    }],\n    onOverlayDragEnd: [{\n      type: Output\n    }],\n    onMapReady: [{\n      type: Output\n    }],\n    onMapDragEnd: [{\n      type: Output\n    }],\n    onZoomChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nclass GMapModule {}\n\nGMapModule.ɵfac = function GMapModule_Factory(t) {\n  return new (t || GMapModule)();\n};\n\nGMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GMapModule\n});\nGMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [GMap],\n      declarations: [GMap]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { GMap, GMapModule }; //# sourceMappingURL=primeng-gmap.js.map","map":{"version":3,"sources":["C:/Users/piecz/Desktop/PracaInzynierska/AngularFrontEnd/node_modules/primeng/fesm2015/primeng-gmap.js"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","i1","CommonModule","GMap","constructor","el","differs","cd","zone","onMapClick","onOverlayClick","onOverlayDblClick","onOverlayDragStart","onOverlayDrag","onOverlayDragEnd","onMapReady","onMapDragEnd","onZoomChanged","differ","find","create","ngAfterViewChecked","map","nativeElement","offsetParent","initialize","google","maps","Map","children","options","emit","overlays","overlay","setMap","bindOverlayEvents","addListener","event","run","originalEvent","getDraggable","bindDragEvents","ngDoCheck","changes","diff","forEachRemovedItem","record","clearInstanceListeners","item","forEachAddedItem","getMap","ɵfac","ElementRef","IterableDiffers","ChangeDetectorRef","NgZone","ɵcmp","NgStyle","type","args","selector","template","changeDetection","OnPush","encapsulation","None","style","styleClass","GMapModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass GMap {\n    constructor(el, differs, cd, zone) {\n        this.el = el;\n        this.cd = cd;\n        this.zone = zone;\n        this.onMapClick = new EventEmitter();\n        this.onOverlayClick = new EventEmitter();\n        this.onOverlayDblClick = new EventEmitter();\n        this.onOverlayDragStart = new EventEmitter();\n        this.onOverlayDrag = new EventEmitter();\n        this.onOverlayDragEnd = new EventEmitter();\n        this.onMapReady = new EventEmitter();\n        this.onMapDragEnd = new EventEmitter();\n        this.onZoomChanged = new EventEmitter();\n        this.differ = differs.find([]).create(null);\n    }\n    ngAfterViewChecked() {\n        if (!this.map && this.el.nativeElement.offsetParent) {\n            this.initialize();\n        }\n    }\n    initialize() {\n        this.map = new google.maps.Map(this.el.nativeElement.children[0], this.options);\n        this.onMapReady.emit({\n            map: this.map\n        });\n        if (this.overlays) {\n            for (let overlay of this.overlays) {\n                overlay.setMap(this.map);\n                this.bindOverlayEvents(overlay);\n            }\n        }\n        this.map.addListener('click', (event) => {\n            this.zone.run(() => {\n                this.onMapClick.emit(event);\n            });\n        });\n        this.map.addListener('dragend', (event) => {\n            this.zone.run(() => {\n                this.onMapDragEnd.emit(event);\n            });\n        });\n        this.map.addListener('zoom_changed', (event) => {\n            this.zone.run(() => {\n                this.onZoomChanged.emit(event);\n            });\n        });\n    }\n    bindOverlayEvents(overlay) {\n        overlay.addListener('click', (event) => {\n            this.zone.run(() => {\n                this.onOverlayClick.emit({\n                    originalEvent: event,\n                    'overlay': overlay,\n                    map: this.map\n                });\n            });\n        });\n        overlay.addListener('dblclick', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDblClick.emit({\n                    originalEvent: event,\n                    'overlay': overlay,\n                    map: this.map\n                });\n            });\n        });\n        if (overlay.getDraggable()) {\n            this.bindDragEvents(overlay);\n        }\n    }\n    ngDoCheck() {\n        let changes = this.differ.diff(this.overlays);\n        if (changes && this.map) {\n            changes.forEachRemovedItem((record) => {\n                google.maps.event.clearInstanceListeners(record.item);\n                record.item.setMap(null);\n            });\n            changes.forEachAddedItem((record) => {\n                record.item.setMap(this.map);\n                record.item.addListener('click', (event) => {\n                    this.zone.run(() => {\n                        this.onOverlayClick.emit({\n                            originalEvent: event,\n                            overlay: record.item,\n                            map: this.map\n                        });\n                    });\n                });\n                if (record.item.getDraggable()) {\n                    this.bindDragEvents(record.item);\n                }\n            });\n        }\n    }\n    bindDragEvents(overlay) {\n        overlay.addListener('dragstart', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDragStart.emit({\n                    originalEvent: event,\n                    overlay: overlay,\n                    map: this.map\n                });\n            });\n        });\n        overlay.addListener('drag', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDrag.emit({\n                    originalEvent: event,\n                    overlay: overlay,\n                    map: this.map\n                });\n            });\n        });\n        overlay.addListener('dragend', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDragEnd.emit({\n                    originalEvent: event,\n                    overlay: overlay,\n                    map: this.map\n                });\n            });\n        });\n    }\n    getMap() {\n        return this.map;\n    }\n}\nGMap.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GMap, deps: [{ token: i0.ElementRef }, { token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nGMap.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: GMap, selector: \"p-gmap\", inputs: { style: \"style\", styleClass: \"styleClass\", options: \"options\", overlays: \"overlays\" }, outputs: { onMapClick: \"onMapClick\", onOverlayClick: \"onOverlayClick\", onOverlayDblClick: \"onOverlayDblClick\", onOverlayDragStart: \"onOverlayDragStart\", onOverlayDrag: \"onOverlayDrag\", onOverlayDragEnd: \"onOverlayDragEnd\", onMapReady: \"onMapReady\", onMapDragEnd: \"onMapDragEnd\", onZoomChanged: \"onZoomChanged\" }, ngImport: i0, template: `<div [ngStyle]=\"style\" [class]=\"styleClass\"></div>`, isInline: true, directives: [{ type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GMap, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-gmap',\n                    template: `<div [ngStyle]=\"style\" [class]=\"styleClass\"></div>`,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; }, propDecorators: { style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], overlays: [{\n                type: Input\n            }], onMapClick: [{\n                type: Output\n            }], onOverlayClick: [{\n                type: Output\n            }], onOverlayDblClick: [{\n                type: Output\n            }], onOverlayDragStart: [{\n                type: Output\n            }], onOverlayDrag: [{\n                type: Output\n            }], onOverlayDragEnd: [{\n                type: Output\n            }], onMapReady: [{\n                type: Output\n            }], onMapDragEnd: [{\n                type: Output\n            }], onZoomChanged: [{\n                type: Output\n            }] } });\nclass GMapModule {\n}\nGMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GMapModule, declarations: [GMap], imports: [CommonModule], exports: [GMap] });\nGMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GMapModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [GMap],\n                    declarations: [GMap]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GMap, GMapModule };\n//# sourceMappingURL=primeng-gmap.js.map\n"]},"metadata":{},"sourceType":"module"}